@model List<AVTMS.Models.VehicleDetect>

@{
    ViewData["Title"] = "Upload Vehicle Video";
}

<!--Truncate python console output from success message-->
@{
    var successMessage = TempData["Success"]?.ToString();
    var truncatedMessage = successMessage?.Length > 200 ? successMessage.Substring(0, 200) + "..." : successMessage;
}
@if (Model != null && Model.Any())
{
    <div class="text-end mb-3 me-5">
        <a asp-controller="VehicleDetection"
           asp-action="AllVehicleMatchDetails"
           class="btn btn-success">
            Show All Matched Vehicle Details
        </a>
    </div>
}


<!-- Modal -->
<div class="modal fade" id="vehicleMatchModal" tabindex="-1" aria-labelledby="vehicleMatchModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="vehicleMatchModalLabel">Vehicle Match Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"> <i class="fas fa-xmark"></i></button>
            </div>
            <div class="modal-body" id="vehicleMatchModalBody">
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status" id="loadingSpinner" style="display:none;">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Vehicle Footage Upload Panel -->
<div class="row mt-4">
    <div class="col-md-10 offset-md-1">
        <div class="card shadow rounded">
            <div class="card-header bg-primary text-white d-flex align-items-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="#fff" class="bi bi-upload me-2" viewBox="0 0 16 16">
                    <path d="M.5 9.9V14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V9.9a.5.5 0 0 0-1 0V14H1V9.9a.5.5 0 0 0-1 0z" />
                    <path d="M7.646 1.146a.5.5 0 0 1 .708 0l4 4a.5.5 0 0 1-.708.708L8.5 2.707V10.5a.5.5 0 0 1-1 0V2.707L4.354 5.854a.5.5 0 1 1-.708-.708l4-4z" />
                </svg>
                <h5 class="mb-0">Upload Vehicle Footage</h5>
            </div>

            <div class="card-body">
                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success">
                        @Html.Raw(truncatedMessage)
                    </div>
                }
                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger">@TempData["Error"]</div>
                }

                <form asp-controller="VehicleDetection"
                      asp-action="UploadVideo"
                      method="post"
                      enctype="multipart/form-data">

                    <div class="mb-3">
                        <label for="videoFile" class="form-label fw-bold">Select Video File</label>
                        <input type="file"
                               class="form-control"
                               id="videoFile"
                               name="videoFile"
                               accept="video/*"
                               required
                               onchange="previewVideo()" />
                    </div>

                    <div class="mt-4">
                        <button type="submit" class="btn btn-primary w-100 fw-semibold deffect">
                            Detect Number Plates
                        </button>
                    </div>
                </form>

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger mt-4">
                        <ul class="mb-0">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

                <!-- Live Preview -->
                <div id="livePreview" class="mt-5 d-none">
                    <h6 class="fw-bold mb-2">Live Video Preview</h6>
                    <hr />
                    <video id="videoPreview" width="100%" height="auto" controls class="rounded shadow border"></video>
                </div>

                <!-- Uploaded Preview -->
                @if (TempData["VideoPath"] != null)
                {
                    <div class="mt-5">
                        <h6 class="fw-bold mb-2">Uploaded Video Preview</h6>
                        <hr />
                        <video width="100%" height="auto" controls class="rounded shadow border">
                            <source src="@TempData["VideoPath"]" type="video/mp4" />
                            Your browser does not support the video tag.
                        </video>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Detected Vehicles Table -->
<!-- Detected Vehicles Table -->
<h2 class="mt-5">Detected Vehicles</h2>

<div class="card shadow rounded">
    <div class="card-header bg-dark text-white">
        <h5 class="mb-0">Detection Results</h5>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="example1" class="table table-hover table-bordered table-striped w-100">
                <thead class="table-primary">
                    <tr>
                        <th>Detect ID</th>
                        <th>Start Time</th>
                        <th>End Time</th>
                        <th>License Plate</th>
                        <th>Details</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var detect in Model)
                    {
                        <tr>
                            <td>@detect.DetectId</td>
                            <td>@detect.start_time</td>
                            <td>@detect.end_time</td>
                            <td>@detect.license_plate</td>
                            <td>

                                <button type="button"
                                        class="btn btn-success btnShowVehicleMatch"
                                       
                                        data-licenseplate="@detect.license_plate">
                                    Show Details
                                </button>
                            </td>
 
                        </tr>


                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        function previewVideo() {
            const fileInput = document.getElementById('videoFile');
            const video = document.getElementById('videoPreview');
            const previewContainer = document.getElementById('livePreview');

            if (fileInput.files && fileInput.files[0]) {
                const file = fileInput.files[0];
                const url = URL.createObjectURL(file);
                video.src = url;
                previewContainer.classList.remove('d-none');
            }
        }

      

    </script>
    <!--For vehicle detected data show popup model-->
    
        <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Rebind event every time modal is opened
            document.querySelectorAll('.btnShowVehicleMatch').forEach(button => {
                button.addEventListener('click', function () {
                    var licensePlate = this.getAttribute('data-licenseplate');
                    var modalBody = document.getElementById('vehicleMatchModalBody');
                    var spinner = document.getElementById('loadingSpinner');
                    var modalElement = document.getElementById('vehicleMatchModal');
                    var bsModal = bootstrap.Modal.getOrCreateInstance(modalElement); // ensures modal is usable again

                    // Clear previous content and show spinner
                    modalBody.innerHTML = '';
                    spinner.style.display = 'inline-block';

                    fetch(`/VehicleDetection/_VehicleMatchDetailsPartialByPlate?plate=${encodeURIComponent(licensePlate)}`)
                        .then(response => {
                            if (!response.ok) {
                                if (response.status === 404) {
                                    throw new Error('No data found for this license plate.');
                                } else {
                                    throw new Error('Network error. Please try again.');
                                }
                            }
                            return response.text();
                        })
                        .then(html => {
                            spinner.style.display = 'none';
                            modalBody.innerHTML = html;
                            bsModal.show(); // only show modal if data is valid
                        })
                        .catch(error => {
                            spinner.style.display = 'none';
                            modalBody.innerHTML = `<div class="alert alert-warning">${error.message}</div>`;
                            bsModal.show(); // still show modal to display error
                        });
                });
            });

            // On modal close, reset content and remove leftover backdrop
            var vehicleMatchModal = document.getElementById('vehicleMatchModal');
            vehicleMatchModal.addEventListener('hidden.bs.modal', function () {
                var modalBody = document.getElementById('vehicleMatchModalBody');
                var spinner = document.getElementById('loadingSpinner');

                modalBody.innerHTML = '';
                spinner.style.display = 'none';

                // Clean up any leftover backdrop
                const backdrops = document.querySelectorAll('.modal-backdrop');
                backdrops.forEach(backdrop => backdrop.remove());
            });
        });
    </script>


   


}
