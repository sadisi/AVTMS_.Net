@model IEnumerable<AVTMS.Models.AuthUsers>

@{
    ViewData["Title"] = "Index";
}


<!--Successful message from Auth user Controller-->
@if (TempData["SuccessMessage"] != null)
{
    <div id="success-alert" class="alert alert-primary d-flex align-items-center" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
             class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2"
             viewBox="0 0 16 16" role="img" aria-label="Warning:">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0
                     .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </svg>
        <div>
            @TempData["SuccessMessage"]
        </div>
    </div>
}
<!--User Update Alert-->
<div id="updateAlert" class="alert alert-dismissible fade show d-none" role="alert">
    <strong id="alertTitle"></strong> <span id="alertMessage"></span>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close" onclick="$('#updateAlert').addClass('d-none')">
        <span aria-hidden="true">&times;</span>
    </button>
</div>



<div class="container mt-5">
    <div class="card shadow-lg rounded-4 mt-5 mb-5">
        <div class="card-body mt-3">
            <h2 class="card-title text-center mb-4 text-primary">🔐 Authorized Users Registration Page</h2>

            <div class="d-flex justify-content-center gap-3 mb-4 flex-wrap">
                <a class="btn btn-outline-secondary d-flex align-items-center gap-2 px-4 mr-3" asp-area="" asp-controller="Admins" asp-action="Index">
                    <i class="fa fa-user-tie  mr-2"></i>  Admin Registration Page
                </a>

                <a class="btn btn-outline-secondary d-flex align-items-center gap-2 px-4  mr-3" asp-area="" asp-controller="BaseUsers" asp-action="Index">
                    <i class="fa fa-users slash  mr-2"></i> Base User Registration Page
                </a>

                <a class="btn btn-success d-flex align-items-center gap-2 px-4  mr-3" asp-action="Create">
                    <i class="fa fa-user-add  mr-2"></i> Add Authorized User 
                </a>
            </div>
        </div>
    </div>
</div>



<div class="card">
    <div class="card-header">
        <h3 class="card-title">Authorized Users List</h3>
    </div>
    <div class="card-body">
        <table id="example1" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EmployeeId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.NIC)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Password)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PhoneNumber)
                    </th>

                 
                    <th>
                        @Html.DisplayNameFor(model => model.UserBranch)
                    </th>
                    <th>Edit</th>
                    <th>View</th>
                    <th>Delete</th>
                    <th>Option</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmployeeId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NIC)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Password)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                        </td>

                       
                        <td>
                            @Html.DisplayFor(modelItem => item.UserBranch)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary"><i class="fa fa-edit"></i>Edit</a>

                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-warning"><i class="fa fa-eye"></i>View</a>
                        </td>
                        <td>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger"><i class="fa fa-trash"></i>Delete</a>
                        </td>
                        <td>
                            <!--<a class="btn btn-sm btn-primary updateButton" data-id="@item.Id">Update</a> -->
                            @if (item.IsRegistered)
                            {
                                <a class=" updateButton btn btn-success" data-id="@item.Id"><i class=" fa-arrows-rotate"></i>Update</a>
                            }
                            else
                            {
                                <a class="registerButton btn btn-success " data-id="@item.Id">Register</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!-- Modal container for registration form -->
<div id="registerModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Register Base User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="$('#registerModal').hide();">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="registerModalBody">
                <!-- Registration form will be loaded here via AJAX -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>

        ////_RegisterPartial.cs Page load
        $(document).ready(function(){
            $('.registerButton').click(function(e){
                e.preventDefault();
                var id = $(this).data('id');
                // Use AJAX to get the _RegisterPartial view
                $.ajax({
                    url: '@Url.Action("Register", "AuthUsers")',
                    data: { id: id },
                    type: 'GET',
                    success: function(result) {
                        // Load the result into the modal body and show the modal
                        $('#registerModalBody').html(result);
                        $('#registerModal').show();
                    },
                    error: function(xhr, status, error){
                        alert("An error occurred while loading the registration form.");
                    }
                });
            });
        });



         // Sync AuthUsers to RegisterModel on Update Button Click
            $('.updateButton').click(function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("SyncToRegisterModel", "AuthUsers")',
                    type: 'POST',
                    data: { id: id },
                    success: function (result) {
                        showAlert(result.success, result.message);
                        if (result.success) {
                            setTimeout(function () {
                                location.reload();
                            }, 2000);
                        }
                    },
                    error: function () {
                        showAlert(false, "An error occurred while syncing data.");
                    }
                });
            });

            // Alert Display Function
            function showAlert(success, message) {
                let alertType = success ? 'alert-primary' : 'alert-danger';
                let alertTitle = success ? '✅ Success!' : '⚠️ Error:';

                $('#updateAlert')
                    .removeClass('d-none alert-primary alert-danger')
                    .addClass(alertType)
                    .fadeIn();

                $('#alertTitle').text(alertTitle);
                $('#alertMessage').text(" " + message);

                // Auto hide after 5 seconds
                setTimeout(function () {
                    $('#updateAlert').fadeOut(function () {
                        $(this).addClass('d-none');
                    });
                }, 5000);
            }

    </script>

}
