@model IEnumerable<AVTMS.Models.BaseUser>

@{
    ViewData["Title"] = "Index";
}


<!--Successful message from Base user Controller-->
@if (TempData["SuccessMessage"] != null)
{
    <div id="success-alert" class="alert alert-primary d-flex align-items-center" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
             class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2"
             viewBox="0 0 16 16" role="img" aria-label="Warning:">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0
                     .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </svg>
        <div>
            @TempData["SuccessMessage"]
        </div>
    </div>
}
<!--User Update Alert-->
<div id="updateAlert" class="alert alert-dismissible fade show d-none" role="alert">
    <strong id="alertTitle"></strong> <span id="alertMessage"></span>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close" onclick="$('#updateAlert').addClass('d-none')">
        <span aria-hidden="true">&times;</span>
    </button>
</div>



<h1>Base Users</h1>
<div class="mb-3">

    <a class="btn btn-secondary" asp-area="" asp-controller="Admins" asp-action="Index">👥 Admin</a>
        <a class="btn btn-secondary" asp-area="" asp-controller="AuthUsers" asp-action="Index">👥 Authorized Users</a>
</div>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NIC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MiddleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RegisteredDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserBranch)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NIC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MiddleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegisteredDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserBranch)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                    <!-- <a class="btn btn-link registerButton" data-id="@item.Id">Register</a>-->
                    @if (item.IsRegistered)
                    {
                        <a class="btn btn-link  updateButton" data-id="@item.Id">Update</a>
                    }
                    else
                    {
                        <a class="btn btn-link registerButton" data-id="@item.Id">Register</a>
                    }
            </td>
        </tr>
}
    </tbody>
</table>
  <!--Aditional dev delete-->

<!-- Modal container for registration form -->
<div id="registerModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Register Base User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="$('#registerModal').hide();">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="registerModalBody">
                <!-- Registration form will be loaded here via AJAX -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {

            // Load Register Partial View in Modal
            $('.registerButton').click(function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("Register", "BaseUsers")',
                    data: { id: id },
                    type: 'GET',
                    success: function (result) {
                        $('#registerModalBody').html(result);
                        $('#registerModal').show();
                    },
                    error: function () {
                        showAlert(false, "An error occurred while loading the registration form.");
                    }
                });
            });

            // Sync BaseUser to RegisterModel on Update Button Click
            $('.updateButton').click(function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("SyncToRegisterModel", "BaseUsers")',
                    type: 'POST',
                    data: { id: id },
                    success: function (result) {
                        showAlert(result.success, result.message);
                        if (result.success) {
                            setTimeout(function () {
                                location.reload();
                            }, 2000);
                        }
                    },
                    error: function () {
                        showAlert(false, "An error occurred while syncing data.");
                    }
                });
            });

            //When user added as a base user notiffication timeout
             $(document).ready(function () {
            // Auto hide the success alert after 5 seconds
            if ($('#success-alert').length > 0) {
                setTimeout(function () {
                    $('#success-alert').fadeOut('slow', function () {
                        $(this).addClass('d-none');
                    });
                }, 5000); // 5000ms = 5 seconds
            }
        });

            // Alert Display Function
            function showAlert(success, message) {
                let alertType = success ? 'alert-primary' : 'alert-danger';
                let alertTitle = success ? '✅ Success!' : '⚠️ Error:';

                $('#updateAlert')
                    .removeClass('d-none alert-primary alert-danger')
                    .addClass(alertType)
                    .fadeIn();

                $('#alertTitle').text(alertTitle);
                $('#alertMessage').text(" " + message);

                // Auto hide after 5 seconds
                setTimeout(function () {
                    $('#updateAlert').fadeOut(function () {
                        $(this).addClass('d-none');
                    });
                }, 5000);

            }

        });
    </script>
}


